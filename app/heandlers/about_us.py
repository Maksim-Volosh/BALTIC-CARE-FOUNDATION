from aiogram import Bot, F, Router, types
from aiogram.types import (CallbackQuery, FSInputFile, InputMediaPhoto,
                           InputMediaVideo, Message)

import app.keyboards.main_keyboards as mainkb
import config

bot = Bot(token=config.TOKEN)  
router = Router()

# About us
@router.message(F.text == '–û –Ω–∞—Å')
async def about_us(message: Message):
    """
    Displays information about the organization.
    """
    reply_markup=mainkb.about_us
    await message.answer(
        f'<i><b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å, —É–≤–∞–∂–∞–µ–º—ã–µ –≤–æ–ª–æ–Ω—Ç–µ—Ä—ã!</b></i>üôÇ\n\n'
        f'üìç<i><b>–¢—É—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∞ –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–æ–Ω–¥–µ, —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Ä–∞–±–æ—Ç—ã, —Å–±–æ—Ä–∞—Ö, –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö –∏ —Ç–¥. –ù–∏–∂–µ –±—É–¥—É—Ç –∫–Ω–æ–ø–∫–∏ (–Ω–∞–∂–∏–º–∞–µ—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –≤–∞—Å –ø–µ—Ä–µ–±—Ä–æ—Å–∏—Ç –Ω–∞ –∏–Ω—Ñ–æ –æ –¥–∞–Ω–Ω–æ–π —Ç–µ–º–µ)</b></i>\n\n'
        f'‚ùóÔ∏è<i><b>–ü—Ä–æ—à—É –≤–∞—Å –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∫–∞–∂–¥—ã–º –±–ª–æ–∫–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–≤—ã—Å–∏—Ç –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π</b></i>‚ùóÔ∏è', parse_mode='HTML', reply_markup=reply_markup)
    
@router.callback_query(F.data == 'maininfo')
async def maininfo(callback: CallbackQuery):
    """
    Handles the maininfo callback query. It sends a message with the main information about the organization.
    """
    await callback.message.edit_text(
        f'<u>–û–°–ù–û–í–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –§–û–ù–î–ï</u>‚ù£Ô∏è\n\n'
        f'–ü–æ–ª–Ω–æ–µ –∏–º—è: <b>Labdaros ir paramos fondas "Baltic care foundation"</b>\n'
        f'–ö–æ–¥ –∫–æ–º–ø–∞–Ω–∏–∏: 306333331\n'
        f'–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å/—É—á—Ä–µ–¥–∏—Ç–µ–ª—å: <b>–î–º–∏—Ç—Ä–∏–π –ñ–º—É—Ä</b>',
        parse_mode='HTML', reply_markup=mainkb.inlineback)
    
@router.callback_query(F.data == 'aboutcoll')
async def aboutcoll(callback: CallbackQuery):
    """
    Handles the aboutcoll callback query. It sends a message with the information about the collection.
    """
    await callback.message.edit_text(
        f'<b>–°–ë–û–†–´</b> (–ø—Ä–æ–≥—Ä–∞–º–º—ã —Ñ–æ–Ω–¥–∞ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤–µ–¥–µ—Ç—Å—è —Å–±–æ—Ä)‚ù£Ô∏è\n\n'

        f'üìç–ü–æ–º–æ—â—å –ª—é–¥—è–º –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏–º –æ—Ç –≤–æ–π–Ω—ã –≤ –£–∫—Ä–∞–∏–Ω–µ ‚ù§Ô∏èüá∫üá¶\n\n'

        f'üìç–ü–æ–º–æ—â—å –£–∫—Ä–∞–∏–Ω—Å–∫–∏–º –≤–æ–µ–Ω–Ω—ã–ºüá∫üá¶üá∫üá¶\n\n'

        f'üìç–ü–æ–º–æ—â—å –¥–µ—Ç—è–º —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏, –∞ —Ç–∞–∫–∂–µ –¥–µ—Ç—è–º —Å —Å–µ—Ä—å–µ–∑–Ω—ã–º–∏ –≤—Ä–æ–∂–¥–µ–Ω–Ω—ã–º–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è–º–∏ü§±üë∂\n\n'

        f'üìç–û–∫–∞–∑–∞–Ω–∏–µ –ø–æ–º–æ—â–∏ –ø—Ä–∏—é—Ç–∞–º –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –õ–∏—Ç–≤—ã –∏ –£–∫—Ä–∞–∏–Ω—ãüòâüë£\n\n'

        f'üìç–ü–µ—Ä–µ–¥–∞—á–∞ –≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã—Ö –≥—Ä—É–∑–æ–≤ –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É—á–µ—Ä–µ–∂–¥–µ–Ω–∏–π (–≥–æ—Å–ø–∏—Ç–∞–ª–∏, —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ü–µ–Ω—Ç—Ä—ã, —Ä–æ–¥–∏–ª—å–Ω—ã–µ –¥–æ–º–∞) üè•\n\n'

        f'üìç–°–±–æ—Ä, –∑–∞–∫—É–ø–∫–∞ –∏ –≤—ã–¥–∞—á–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã—Ö, –≥–∏–≥–∏–µ–Ω–∏—á–µ—Å–∫–∏—Ö –Ω–∞–±–æ—Ä–æ–≤üçûü•´\n\n', 
        parse_mode='HTML', reply_markup=mainkb.aboutcoll)

@router.callback_query(F.data == 'help1')
async def help1(callback: CallbackQuery):
    caption=(
        '<b>‚ù§Ô∏è–ü–æ–º–æ—â—å –ª—é–¥—è–º –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏–º –æ—Ç –≤–æ–π–Ω—ã –≤ –£–∫—Ä–∞–∏–Ω–µüá∫üá¶</b>\n\n'
        '-–≠–≤–∞–∫—É–∞—Ü–∏—è –ª—é–¥–µ–π, –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏–∑ –ø—Ä–∏—Ñ—Ä–æ–Ω—Ç–æ–≤—ã—Ö –≥–æ—Ä–æ–¥–æ–≤. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å –Ω–∞—à–µ–π –ø–æ–º–æ—â—å—é —ç–≤–∞–∫—É–∏—Ä–æ–≤–∞–Ω–æ –±–æ–ª–µ–µ 90 —Å–µ–º–µ–π.\n\n'
        '-–û–ø–ª–∞—Ç–∞ –≤—ã–Ω—É–∂–¥–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–µ–∑–¥–∞ –¥–ª—è —Å–µ–º–µ–π –∏–∑ –î–æ–Ω–µ—Ü–∫–æ–π, –õ—É–≥–∞–Ω—Å–∫–æ–π, –ó–∞–ø–æ—Ä–æ–∂—Å–∫–æ–π, –•–µ—Ä—Å–æ–Ω—Å–∫–æ–π –æ–±–ª–∞—Å–µ–π (–ø–æ –£–∫—Ä–∞–∏–Ω–µ+–æ–ø–ª–∞—Ç–∞ –¥–æ—Ä–æ–≥–∏ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é –ï–≤—Ä–æ–ø—ã)\n\n'
        '-–û–ø–ª–∞—Ç–∞ –ø–µ—Ä–≤—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ (–∑–∞—Å–µ–ª–µ–Ω–∏–µ, –≤–µ—â–∏ –ø–µ—Ä–≤–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)\n\n'
    )
    photo_path = 'app/media/help1.jpg'
    
    await callback.answer()
    await callback.message.answer_photo(
        types.FSInputFile(path=photo_path), caption=caption, parse_mode='HTML'
    )
    
@router.callback_query(F.data == 'help2')
async def help2(callback: CallbackQuery):
    caption=(
        f'<b>üá∫üá¶–ü–æ–º–æ—â—å –£–∫—Ä–∞–∏–Ω—Å–∫–∏–º –≤–æ–µ–Ω–Ω—ã–º üá∫üá¶</b>\n\n'
        f'-–ú—ã –∑–∞–∫—É–ø–∞–µ–º —Ñ–æ—Ä–º—É, –∞–º—É–Ω–∏—Ü–∏—é (–ø–ª–∏—Ç—ã –¥–ª—è –±—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç–æ–≤, –∫–µ–≤–ª–∞—Ä–æ–≤—ã–µ —à–ª–µ–º—ã, —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —à—Ç–∞–Ω—ã, –Ω–∞–∫–æ–ª–µ–Ω–Ω–∏–∫–∏ –∏ –∏–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ)\n\n'
        f'-–ü–æ–∫—É–ø–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –¥–ª—è –≤–æ–µ–Ω–Ω—ã—Ö –±—Ä–∏–≥–∞–¥ - –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ 5 –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –¥–ª—è 38 –æ—Ç–¥–µ–ª—å–Ω–æ–π –±—Ä–∏–≥–∞–¥—ã –º–æ—Ä—Å–∫–æ–π –ø–∏—Ö–æ—Ç—ã –∞ —Ç–∞–∫–∂–µ <a href="https://ab3.army/">3 –æ—Ç–¥–µ–ª—å–Ω–æ–π —à—Ç—É—Ä–º–æ–≤–æ–π –±—Ä–∏–≥–∞–¥—ã</a>\n\n'
        f'-–ó–∞–∫—É–ø–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥—ã–≤–∞–Ω–∏—è –¥–ª—è –≤–æ–µ–Ω–Ω—ã—Ö –∞ –∏–º–µ–Ω–Ω–æ:\n'
        f'üìç–¥—Ä–æ–Ω—ã –∏ –∏—Ö –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ (–∑–∞–ø—Ä–æ—Å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è)\n'
        f'üìç—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –¥–ª—è –±–µ–∑–ø–µ—Ä–µ–±–æ–π–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è "StarLink" –∞ —Ç–∞–∫–∂–µ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø–∞–∫–µ—Ç —É—Å–ª—É–≥ (–æ–ø–ª–∞—Ç–∞ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü)'
    )
    
    
    photo_paths = ['app/media/help2_2.jpg', 'app/media/help2_3.jpg', 'app/media/help2_4.jpg', 'app/media/help2_5.jpg', 'app/media/help2_6.jpg']

    media = [InputMediaPhoto(media=FSInputFile(path='app/media/help2_1.jpg'), caption=caption, parse_mode='HTML'),]
    
    for photo in photo_paths:
        media.append(InputMediaPhoto(media=FSInputFile(path=photo)))
    
    await callback.answer()
    await callback.message.answer_media_group(media=media)
    
@router.callback_query(F.data == 'help3')
async def help3(callback: CallbackQuery):
    caption=(
        f'<b>ü§±üë∂–ü–æ–º–æ—â—å –¥–µ—Ç—è–º —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏, –∞ —Ç–∞–∫–∂–µ –¥–µ—Ç—è–º —Å —Å–µ—Ä—å–µ–∑–Ω—ã–º–∏ –≤—Ä–æ–∂–¥–µ–Ω–Ω—ã–º–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è–º–∏ü§±üë∂</b>\n\n'
        f'-–û–ø–ª–∞—Ç–∞ –ª–µ—á–µ–Ω–∏—è –∏ —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–π\n\n'
        f'-–ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–µ–º–µ–π –≤ —Ç—Ä—É–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö'
    )
    
    
    photo_paths = ['app/media/help3_2.jpg', 'app/media/help3_3.jpg']

    media = [InputMediaPhoto(media=FSInputFile(path='app/media/help3_1.jpg'), caption=caption, parse_mode='HTML'),]
    
    for photo in photo_paths:
        media.append(InputMediaPhoto(media=FSInputFile(path=photo)))
    
    await callback.answer()
    await callback.message.answer_media_group(media=media)
    
@router.callback_query(F.data == 'help4')
async def help4(callback: CallbackQuery):
    caption=(
        '<b>üòâüë£–û–∫–∞–∑–∞–Ω–∏–µ –ø–æ–º–æ—â–∏ –ø—Ä–∏—é—Ç–∞–º –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –õ–∏—Ç–≤—ã –∏ –£–∫—Ä–∞–∏–Ω—ãüòâüë£</b>\n\n'
        '-–†–µ–≥—É–ª—è—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ—Ä–º–æ–≤ –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö\n\n'
        '-–ó–∞–∫—É–ø–∫–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –¥–ª—è –∂–∏–∑–Ω–∏ –Ω–∞—à–∏—Ö –º–∞–ª–µ–Ω—å–∫–∏—Ö –¥—Ä—É–∑–µ–π\n\n'
        '-–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–æ –≤—ã–≥—É–ª—É –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ –≥–æ—Ä–æ–¥–∞—Ö –í–∏–ª—å–Ω—é—Å –∏ –ö–∞—É–Ω–∞—Å'
    )
    photo_path = 'app/media/help4_1.jpg'
    
    await callback.answer()
    await callback.message.answer_photo(
        types.FSInputFile(path=photo_path), caption=caption, parse_mode='HTML'
    )
    
@router.callback_query(F.data == 'help5')
async def help5(callback: CallbackQuery):
    caption=(
        f'<b>–ü–µ—Ä–µ–¥–∞—á–∞ –≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã—Ö –≥—Ä—É–∑–æ–≤ –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É—á–µ—Ä–µ–∂–¥–µ–Ω–∏–π (–≥–æ—Å–ø–∏—Ç–∞–ª–∏, —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ü–µ–Ω—Ç—Ä—ã, —Ä–æ–¥–∏–ª—å–Ω—ã–µ –¥–æ–º–∞) üè•</b>\n\n'
        f'-–ó–∞–∫—É–ø–∫–∞ —Ä–∞—Å—Ö–æ–¥–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∞ —Ç–∞–∫–∂–µ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–æ–≤ –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π(—É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –±–æ–ª–µ–µ 60 —É–ø–∞–∫–æ–≤–æ–∫ –ø–æ–¥–≥—É–∑–Ω–∏–∫–æ–≤ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö –≤ –≥–æ—Å–ø–∏—Ç–∞–ª—å –≤ –£–∫—Ä–∞–∏–Ω–µ, —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –±–∏–Ω—Ç—ã, —à–ø—Ä–∏—Ü—ã; —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞–±–æ—Ä –ø–æ–º–æ—â–∏ –≤ –ó–∞–ø–æ—Ä–æ–∂—Å–∫–∏–π –ø–µ—Ä–∏–Ω–∞—Ç–∞–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä)'
    )
    
    photo_paths = ['app/media/help5_2.jpg', 'app/media/help5_3.jpg']

    media = [InputMediaPhoto(media=FSInputFile(path='app/media/help5_1.jpg',), caption=caption, parse_mode='HTML'),]
    
    for photo in photo_paths:
        media.append(InputMediaPhoto(media=FSInputFile(path=photo)))
    
    await callback.answer()
    await callback.message.answer_media_group(media=media)
    
@router.callback_query(F.data == 'videos')
async def videos(callback: CallbackQuery):
    videos_paths = ['app/media/video1.mp4', 'app/media/video2.mp4',]

    media = [
        InputMediaVideo(media=FSInputFile(path=videos_paths[0])),
        InputMediaVideo(media=FSInputFile(path=videos_paths[1])),
    ]
    
    await callback.message.answer_media_group(media=media)
    await callback.answer()
    
@router.callback_query(F.data == 'inback')
async def inback(callback: CallbackQuery):
    reply_markup=mainkb.about_us
    await callback.message.edit_text    (
        f'<i><b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å, —É–≤–∞–∂–∞–µ–º—ã–µ –≤–æ–ª–æ–Ω—Ç–µ—Ä—ã!</b></i>üôÇ\n\n'
        f'üìç<i><b>–¢—É—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∞ –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–æ–Ω–¥–µ, —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Ä–∞–±–æ—Ç—ã, —Å–±–æ—Ä–∞—Ö, –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö –∏ —Ç–¥. –ù–∏–∂–µ –±—É–¥—É—Ç –∫–Ω–æ–ø–∫–∏ (–Ω–∞–∂–∏–º–∞–µ—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –≤–∞—Å –ø–µ—Ä–µ–±—Ä–æ—Å–∏—Ç –Ω–∞ –∏–Ω—Ñ–æ –æ –¥–∞–Ω–Ω–æ–π —Ç–µ–º–µ)</b></i>\n\n'
        f'‚ùóÔ∏è<i><b>–ü—Ä–æ—à—É –≤–∞—Å –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∫–∞–∂–¥—ã–º –±–ª–æ–∫–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–≤—ã—Å–∏—Ç –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π</b></i>‚ùóÔ∏è', 
        parse_mode='HTML', reply_markup=reply_markup)